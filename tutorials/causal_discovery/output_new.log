0
1

=======================================================
=======================================================
Starting preliminary phase  1

Starting test phase

p = 0

Test phase complete
p = 1
Writing:   (0,-1) -L> (0, 0) ==> (0,-1) -!> (0, 0) 
Writing:   (1,-1) -L> (1, 0) ==> (1,-1) -!> (1, 0) 
Writing:   (2,-1) -L> (2, 0) ==> (2,-1) -!> (2, 0) 
Writing:   (3,-1) -L> (3, 0) ==> (3,-1) -!> (3, 0) 
Writing:   (4,-1) -L> (4, 0) ==> (4,-1) -!> (4, 0) 
Writing:   (5,-1) -L> (5, 0) ==> (5,-1) -!> (5, 0) 
Writing:   (0, 0) -?> (2, 0) ==> (0, 0) -R> (2, 0) 
Writing:   (2, 0) <?- (0, 0) ==> (2, 0) <R- (0, 0) 
Writing:   (0, 0) -R> (2, 0) ==> (0, 0) -!> (2, 0) 
Writing:   (2, 0) <R- (0, 0) ==> (2, 0) <!- (0, 0) 
Writing:   (0, 0) -?> (3, 0) ==> (0, 0) -R> (3, 0) 
Writing:   (3, 0) <?- (0, 0) ==> (3, 0) <R- (0, 0) 
Writing:   (0, 0) -R> (3, 0) ==> (0, 0) -!> (3, 0) 
Writing:   (3, 0) <R- (0, 0) ==> (3, 0) <!- (0, 0) 
Writing:   (0, 0) -?> (4, 0) ==> (0, 0) -R> (4, 0) 
Writing:   (4, 0) <?- (0, 0) ==> (4, 0) <R- (0, 0) 
Writing:   (0, 0) -R> (4, 0) ==> (0, 0) -!> (4, 0) 
Writing:   (4, 0) <R- (0, 0) ==> (4, 0) <!- (0, 0) 
Writing:   (2, 0) <?- (4, 0) ==> (2, 0) <R- (4, 0) 
Writing:   (4, 0) -?> (2, 0) ==> (4, 0) -R> (2, 0) 
Writing:   (2, 0) <R- (4, 0) ==> (2, 0) <!- (4, 0) 
Writing:   (4, 0) -R> (2, 0) ==> (4, 0) -!> (2, 0) 
Writing:   (3, 0) -?> (6, 0) ==> (3, 0) -R> (6, 0) 
Writing:   (6, 0) <?- (3, 0) ==> (6, 0) <R- (3, 0) 
Writing:   (3, 0) -R> (6, 0) ==> (3, 0) -!> (6, 0) 
Writing:   (6, 0) <R- (3, 0) ==> (6, 0) <!- (3, 0) 
Writing:   (4, 0) -?> (6, 0) ==> (4, 0) -R> (6, 0) 
Writing:   (6, 0) <?- (4, 0) ==> (6, 0) <R- (4, 0) 
Writing:   (4, 0) -R> (6, 0) ==> (4, 0) -!> (6, 0) 
Writing:   (6, 0) <R- (4, 0) ==> (6, 0) <!- (4, 0) 
Writing:   (5, 0) -?> (6, 0) ==> (5, 0) -R> (6, 0) 
Writing:   (6, 0) <?- (5, 0) ==> (6, 0) <R- (5, 0) 
Writing:   (5, 0) -R> (6, 0) ==> (5, 0) -!> (6, 0) 
Writing:   (6, 0) <R- (5, 0) ==> (6, 0) <!- (5, 0) 
Writing:   (6, 0) -?> (7, 0) ==> (6, 0) -R> (7, 0) 
Writing:   (7, 0) <?- (6, 0) ==> (7, 0) <R- (6, 0) 
Writing:   (6, 0) -R> (7, 0) ==> (6, 0) -!> (7, 0) 
Writing:   (7, 0) <R- (6, 0) ==> (7, 0) <!- (6, 0) 

Test phase complete

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-00-d'], ['ER-00-c'], ['ER-03'], ['R-04'], ['ER-09'], ['ER-10'], ['ER-00-b'], ['ER-00-a']]

APR:
Marked:    (0, 0) -!> (2, 0) ==> (0, 0) --> (2, 0) 
Marked:    (5, 0) -!> (6, 0) ==> (5, 0) --> (6, 0) 
Marked:    (4, 0) -!> (2, 0) ==> (4, 0) --> (2, 0) 
Marked:    (3,-1) -!> (3, 0) ==> (3,-1) --> (3, 0) 
Marked:    (4,-1) -!> (4, 0) ==> (4,-1) --> (4, 0) 
Marked:    (1,-1) -!> (1, 0) ==> (1,-1) --> (1, 0) 
Marked:    (2,-1) -!> (2, 0) ==> (2,-1) --> (2, 0) 
Marked:    (5,-1) -!> (5, 0) ==> (5,-1) --> (5, 0) 
Marked:    (3, 0) -!> (6, 0) ==> (3, 0) --> (6, 0) 
Marked:    (6, 0) -!> (7, 0) ==> (6, 0) --> (7, 0) 
Marked:    (4, 0) -!> (6, 0) ==> (4, 0) --> (6, 0) 
Marked:    (0, 0) -!> (4, 0) ==> (0, 0) --> (4, 0) 
Marked:    (0,-1) -!> (0, 0) ==> (0,-1) --> (0, 0) 
Marked:    (0, 0) -!> (3, 0) ==> (0, 0) --> (3, 0) 
Writing:   (0, 0) -!> (2, 0) ==> (0, 0) --> (2, 0) 
Writing:   (2, 0) <!- (0, 0) ==> (2, 0) <-- (0, 0) 
Writing:   (5,-1) -!> (5, 0) ==> (5,-1) --> (5, 0) 
Writing:   (3, 0) -!> (6, 0) ==> (3, 0) --> (6, 0) 
Writing:   (6, 0) <!- (3, 0) ==> (6, 0) <-- (3, 0) 
Writing:   (0, 0) -!> (3, 0) ==> (0, 0) --> (3, 0) 
Writing:   (3, 0) <!- (0, 0) ==> (3, 0) <-- (0, 0) 
Writing:   (0, 0) -!> (4, 0) ==> (0, 0) --> (4, 0) 
Writing:   (4, 0) <!- (0, 0) ==> (4, 0) <-- (0, 0) 
Writing:   (4,-1) -!> (4, 0) ==> (4,-1) --> (4, 0) 
Writing:   (2,-1) -!> (2, 0) ==> (2,-1) --> (2, 0) 
Writing:   (4, 0) -!> (2, 0) ==> (4, 0) --> (2, 0) 
Writing:   (2, 0) <!- (4, 0) ==> (2, 0) <-- (4, 0) 
Writing:   (5, 0) -!> (6, 0) ==> (5, 0) --> (6, 0) 
Writing:   (6, 0) <!- (5, 0) ==> (6, 0) <-- (5, 0) 
Writing:   (0,-1) -!> (0, 0) ==> (0,-1) --> (0, 0) 
Writing:   (1,-1) -!> (1, 0) ==> (1,-1) --> (1, 0) 
Writing:   (6, 0) -!> (7, 0) ==> (6, 0) --> (7, 0) 
Writing:   (7, 0) <!- (6, 0) ==> (7, 0) <-- (6, 0) 
Writing:   (3,-1) -!> (3, 0) ==> (3,-1) --> (3, 0) 
Writing:   (4, 0) -!> (6, 0) ==> (4, 0) --> (6, 0) 
Writing:   (6, 0) <!- (4, 0) ==> (6, 0) <-- (4, 0) 

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-00-d:
Found nothing

ER-00-c:
Found nothing

ER-03:
Found nothing

R-04:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

ER-00-b:
Found nothing

ER-00-a:
Found nothing

Orientation phase complete

Middle mark updates


Preliminary phase  1 complete

Graph:
--------------------------------
(0,-1) --> (0, 0)
(1,-1) --> (1, 0)
(0, 0) --> (2, 0)
(2,-1) --> (2, 0)
(0, 0) --> (3, 0)
(3,-1) --> (3, 0)
(0, 0) --> (4, 0)
(2, 0) <-- (4, 0)
(4,-1) --> (4, 0)
(5,-1) --> (5, 0)
(3, 0) --> (6, 0)
(4, 0) --> (6, 0)
(5, 0) --> (6, 0)
(6, 0) --> (7, 0)
--------------------------------

=======================================================
=======================================================
Starting final ancestral phase

Starting test phase

p = 0

Test phase complete
p = 1
Writing:   (0,-1) -L> (0, 0) ==> (0,-1) -!> (0, 0) 
Writing:   (1,-1) -L> (1, 0) ==> (1,-1) -!> (1, 0) 
Writing:   (2,-1) -L> (2, 0) ==> (2,-1) -!> (2, 0) 
Writing:   (3,-1) -L> (3, 0) ==> (3,-1) -!> (3, 0) 
Writing:   (4,-1) -L> (4, 0) ==> (4,-1) -!> (4, 0) 
Writing:   (5,-1) -L> (5, 0) ==> (5,-1) -!> (5, 0) 
Writing:   (0, 0) -?> (2, 0) ==> (0, 0) -R> (2, 0) 
Writing:   (2, 0) <?- (0, 0) ==> (2, 0) <R- (0, 0) 
Writing:   (0, 0) -R> (2, 0) ==> (0, 0) -!> (2, 0) 
Writing:   (2, 0) <R- (0, 0) ==> (2, 0) <!- (0, 0) 
Writing:   (0, 0) -?> (3, 0) ==> (0, 0) -R> (3, 0) 
Writing:   (3, 0) <?- (0, 0) ==> (3, 0) <R- (0, 0) 
Writing:   (0, 0) -R> (3, 0) ==> (0, 0) -!> (3, 0) 
Writing:   (3, 0) <R- (0, 0) ==> (3, 0) <!- (0, 0) 
Writing:   (0, 0) -?> (4, 0) ==> (0, 0) -R> (4, 0) 
Writing:   (4, 0) <?- (0, 0) ==> (4, 0) <R- (0, 0) 
Writing:   (0, 0) -R> (4, 0) ==> (0, 0) -!> (4, 0) 
Writing:   (4, 0) <R- (0, 0) ==> (4, 0) <!- (0, 0) 
Writing:   (2, 0) <?- (4, 0) ==> (2, 0) <R- (4, 0) 
Writing:   (4, 0) -?> (2, 0) ==> (4, 0) -R> (2, 0) 
Writing:   (2, 0) <R- (4, 0) ==> (2, 0) <!- (4, 0) 
Writing:   (4, 0) -R> (2, 0) ==> (4, 0) -!> (2, 0) 
Writing:   (3, 0) -?> (6, 0) ==> (3, 0) -R> (6, 0) 
Writing:   (6, 0) <?- (3, 0) ==> (6, 0) <R- (3, 0) 
Writing:   (3, 0) -R> (6, 0) ==> (3, 0) -!> (6, 0) 
Writing:   (6, 0) <R- (3, 0) ==> (6, 0) <!- (3, 0) 
Writing:   (4, 0) -?> (6, 0) ==> (4, 0) -R> (6, 0) 
Writing:   (6, 0) <?- (4, 0) ==> (6, 0) <R- (4, 0) 
Writing:   (4, 0) -R> (6, 0) ==> (4, 0) -!> (6, 0) 
Writing:   (6, 0) <R- (4, 0) ==> (6, 0) <!- (4, 0) 
Writing:   (5, 0) -?> (6, 0) ==> (5, 0) -R> (6, 0) 
Writing:   (6, 0) <?- (5, 0) ==> (6, 0) <R- (5, 0) 
Writing:   (5, 0) -R> (6, 0) ==> (5, 0) -!> (6, 0) 
Writing:   (6, 0) <R- (5, 0) ==> (6, 0) <!- (5, 0) 
Writing:   (6, 0) -?> (7, 0) ==> (6, 0) -R> (7, 0) 
Writing:   (7, 0) <?- (6, 0) ==> (7, 0) <R- (6, 0) 
Writing:   (6, 0) -R> (7, 0) ==> (6, 0) -!> (7, 0) 
Writing:   (7, 0) <R- (6, 0) ==> (7, 0) <!- (6, 0) 

Test phase complete

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-00-d'], ['ER-00-c'], ['ER-03'], ['R-04'], ['ER-09'], ['ER-10'], ['ER-00-b'], ['ER-00-a']]

APR:
Marked:    (0, 0) -!> (2, 0) ==> (0, 0) --> (2, 0) 
Marked:    (5, 0) -!> (6, 0) ==> (5, 0) --> (6, 0) 
Marked:    (4, 0) -!> (2, 0) ==> (4, 0) --> (2, 0) 
Marked:    (3,-1) -!> (3, 0) ==> (3,-1) --> (3, 0) 
Marked:    (4,-1) -!> (4, 0) ==> (4,-1) --> (4, 0) 
Marked:    (1,-1) -!> (1, 0) ==> (1,-1) --> (1, 0) 
Marked:    (2,-1) -!> (2, 0) ==> (2,-1) --> (2, 0) 
Marked:    (5,-1) -!> (5, 0) ==> (5,-1) --> (5, 0) 
Marked:    (3, 0) -!> (6, 0) ==> (3, 0) --> (6, 0) 
Marked:    (6, 0) -!> (7, 0) ==> (6, 0) --> (7, 0) 
Marked:    (4, 0) -!> (6, 0) ==> (4, 0) --> (6, 0) 
Marked:    (0, 0) -!> (4, 0) ==> (0, 0) --> (4, 0) 
Marked:    (0,-1) -!> (0, 0) ==> (0,-1) --> (0, 0) 
Marked:    (0, 0) -!> (3, 0) ==> (0, 0) --> (3, 0) 
Writing:   (0, 0) -!> (2, 0) ==> (0, 0) --> (2, 0) 
Writing:   (2, 0) <!- (0, 0) ==> (2, 0) <-- (0, 0) 
Writing:   (5,-1) -!> (5, 0) ==> (5,-1) --> (5, 0) 
Writing:   (3, 0) -!> (6, 0) ==> (3, 0) --> (6, 0) 
Writing:   (6, 0) <!- (3, 0) ==> (6, 0) <-- (3, 0) 
Writing:   (0, 0) -!> (3, 0) ==> (0, 0) --> (3, 0) 
Writing:   (3, 0) <!- (0, 0) ==> (3, 0) <-- (0, 0) 
Writing:   (0, 0) -!> (4, 0) ==> (0, 0) --> (4, 0) 
Writing:   (4, 0) <!- (0, 0) ==> (4, 0) <-- (0, 0) 
Writing:   (4,-1) -!> (4, 0) ==> (4,-1) --> (4, 0) 
Writing:   (2,-1) -!> (2, 0) ==> (2,-1) --> (2, 0) 
Writing:   (4, 0) -!> (2, 0) ==> (4, 0) --> (2, 0) 
Writing:   (2, 0) <!- (4, 0) ==> (2, 0) <-- (4, 0) 
Writing:   (5, 0) -!> (6, 0) ==> (5, 0) --> (6, 0) 
Writing:   (6, 0) <!- (5, 0) ==> (6, 0) <-- (5, 0) 
Writing:   (0,-1) -!> (0, 0) ==> (0,-1) --> (0, 0) 
Writing:   (1,-1) -!> (1, 0) ==> (1,-1) --> (1, 0) 
Writing:   (6, 0) -!> (7, 0) ==> (6, 0) --> (7, 0) 
Writing:   (7, 0) <!- (6, 0) ==> (7, 0) <-- (6, 0) 
Writing:   (3,-1) -!> (3, 0) ==> (3,-1) --> (3, 0) 
Writing:   (4, 0) -!> (6, 0) ==> (4, 0) --> (6, 0) 
Writing:   (6, 0) <!- (4, 0) ==> (6, 0) <-- (4, 0) 

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-00-d:
Found nothing

ER-00-c:
Found nothing

ER-03:
Found nothing

R-04:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

ER-00-b:
Found nothing

ER-00-a:
Found nothing

Orientation phase complete

Middle mark updates


Final ancestral phase complete

Graph:
--------------------------------
(0,-1) --> (0, 0)
(1,-1) --> (1, 0)
(0, 0) --> (2, 0)
(2,-1) --> (2, 0)
(0, 0) --> (3, 0)
(3,-1) --> (3, 0)
(0, 0) --> (4, 0)
(2, 0) <-- (4, 0)
(4,-1) --> (4, 0)
(5,-1) --> (5, 0)
(3, 0) --> (6, 0)
(4, 0) --> (6, 0)
(5, 0) --> (6, 0)
(6, 0) --> (7, 0)
--------------------------------

=======================================================
=======================================================
Starting non-ancestral phase

Middle mark updates


Starting test phase

p = 0

Test phase complete

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-00-d'], ['ER-00-c'], ['ER-03'], ['R-04'], ['ER-09'], ['ER-10'], ['ER-00-b'], ['ER-00-a']]

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-00-d:
Found nothing

ER-00-c:
Found nothing

ER-03:
Found nothing

R-04:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

ER-00-b:
Found nothing

ER-00-a:
Found nothing

Orientation phase complete

Non-ancestral phase complete

Graph:
--------------------------------
(0,-1) --> (0, 0)
(1,-1) --> (1, 0)
(0, 0) --> (2, 0)
(2,-1) --> (2, 0)
(0, 0) --> (3, 0)
(3,-1) --> (3, 0)
(0, 0) --> (4, 0)
(2, 0) <-- (4, 0)
(4,-1) --> (4, 0)
(5,-1) --> (5, 0)
(3, 0) --> (6, 0)
(4, 0) --> (6, 0)
(5, 0) --> (6, 0)
(6, 0) --> (7, 0)
--------------------------------

=======================================================
=======================================================
Final rule application phase

Setting all middle marks to '-'

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-00-d'], ['ER-00-c'], ['ER-03'], ['R-04'], ['ER-09'], ['ER-10'], ['ER-00-b'], ['ER-00-a']]

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-00-d:
Found nothing

ER-00-c:
Found nothing

ER-03:
Found nothing

R-04:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

ER-00-b:
Found nothing

ER-00-a:
Found nothing

Orientation phase complete

=======================================================
=======================================================

LPCMCI has converged

Final graph:
--------------------------------
--------------------------------
(0,-1) --> (0, 0)
(1,-1) --> (1, 0)
(0, 0) --> (2, 0)
(2,-1) --> (2, 0)
(0, 0) --> (3, 0)
(3,-1) --> (3, 0)
(0, 0) --> (4, 0)
(2, 0) <-- (4, 0)
(4,-1) --> (4, 0)
(5,-1) --> (5, 0)
(3, 0) --> (6, 0)
(4, 0) --> (6, 0)
(5, 0) --> (6, 0)
(6, 0) --> (7, 0)
--------------------------------
--------------------------------

Max search set: -1
Max na-pds set: -1

{'graph': array([[['', '-->', ''],
        ['', '', ''],
        ['-->', '', ''],
        ['-->', '', ''],
        ['-->', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', '']],

       [['', '', ''],
        ['', '-->', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', '']],

       [['<--', '', ''],
        ['', '', ''],
        ['', '-->', ''],
        ['', '', ''],
        ['<--', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', '']],

       [['<--', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '-->', ''],
        ['', '', ''],
        ['', '', ''],
        ['-->', '', ''],
        ['', '', '']],

       [['<--', '', ''],
        ['', '', ''],
        ['-->', '', ''],
        ['', '', ''],
        ['', '-->', ''],
        ['', '', ''],
        ['-->', '', ''],
        ['', '', '']],

       [['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '-->', ''],
        ['-->', '', ''],
        ['', '', '']],

       [['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['', '', ''],
        ['-->', '', '']],

       [['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['<--', '', ''],
        ['', '', '']]], dtype='<U3'), 'p_matrix': array([[[ 0.,  0., inf],
        [inf, inf, inf],
        [ 0., inf, inf],
        [ 0., inf, inf],
        [ 0., inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf]],

       [[inf, inf, inf],
        [ 0.,  0., inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf]],

       [[ 0., inf, inf],
        [inf, inf, inf],
        [ 0.,  0., inf],
        [inf, inf, inf],
        [ 0., inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf]],

       [[ 0., inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [ 0.,  0., inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [ 0., inf, inf],
        [inf, inf, inf]],

       [[ 0., inf, inf],
        [inf, inf, inf],
        [ 0., inf, inf],
        [inf, inf, inf],
        [ 0.,  0., inf],
        [inf, inf, inf],
        [ 0., inf, inf],
        [inf, inf, inf]],

       [[inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [ 0.,  0., inf],
        [ 0., inf, inf],
        [inf, inf, inf]],

       [[inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [ 0., inf, inf],
        [ 0., inf, inf],
        [ 0., inf, inf],
        [ 0., inf, inf],
        [ 0., inf, inf]],

       [[inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [inf, inf, inf],
        [ 0., inf, inf],
        [ 0., inf, inf]]]), 'val_matrix': array([[[ 0.        ,  0.63828058,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.98447849,        -inf,        -inf],
        [ 0.73236505,        -inf,        -inf],
        [ 0.80201285,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf]],

       [[       -inf,        -inf,        -inf],
        [ 0.        ,  0.61644352,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf]],

       [[ 0.98447849,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.        , -0.75218377,        -inf],
        [       -inf,        -inf,        -inf],
        [-0.97213033,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf]],

       [[ 0.73236505,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.        , -0.72777886,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [-0.96239769,        -inf,        -inf],
        [       -inf,        -inf,        -inf]],

       [[ 0.80201285,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [-0.97213033,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.        ,  0.9006753 ,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.98731672,        -inf,        -inf],
        [       -inf,        -inf,        -inf]],

       [[       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.        ,  0.61543993,        -inf],
        [-0.8602061 ,        -inf,        -inf],
        [       -inf,        -inf,        -inf]],

       [[       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [-0.96239769,        -inf,        -inf],
        [ 0.98731672,        -inf,        -inf],
        [-0.8602061 ,        -inf,        -inf],
        [ 0.        ,        -inf,        -inf],
        [ 1.        ,        -inf,        -inf]],

       [[       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 1.        ,        -inf,        -inf],
        [ 0.        ,        -inf,        -inf]]])}
