0
{0: {(0, -1): '-?>', (1, 0): '<?-', (1, -1): '-?>', (2, 0): '-?>', (2, -1): '', (3, 0): '-?>', (3, -1): '', (4, 0): '-?>', (4, -1): '', (5, 0): '-?>', (5, -1): '', (6, 0): '-?>', (6, -1): '', (7, 0): '', (7, -1): ''}, 1: {(0, 0): '-?>', (0, -1): 'o?>', (1, -1): '', (2, 0): '', (2, -1): '', (3, 0): '', (3, -1): '', (4, 0): '', (4, -1): '', (5, 0): '', (5, -1): '', (6, 0): '', (6, -1): '', (7, 0): '-?>', (7, -1): 'o?>'}, 2: {(0, 0): '<?-', (0, -1): '', (1, 0): '', (1, -1): '', (2, -1): '', (3, 0): '', (3, -1): '', (4, 0): '', (4, -1): '', (5, 0): '', (5, -1): '', (6, 0): '', (6, -1): '', (7, 0): '<?-', (7, -1): ''}, 3: {(0, 0): '<?-', (0, -1): '', (1, 0): '', (1, -1): '', (2, 0): '', (2, -1): '', (3, -1): '', (4, 0): '', (4, -1): '', (5, 0): '', (5, -1): '', (6, 0): '', (6, -1): '', (7, 0): '<?-', (7, -1): ''}, 4: {(0, 0): '<?-', (0, -1): '', (1, 0): '', (1, -1): '', (2, 0): '', (2, -1): '', (3, 0): '', (3, -1): '', (4, -1): '', (5, 0): '', (5, -1): '', (6, 0): '', (6, -1): '', (7, 0): '<?-', (7, -1): ''}, 5: {(0, 0): '<?-', (0, -1): '', (1, 0): '', (1, -1): '', (2, 0): '', (2, -1): '', (3, 0): '', (3, -1): '', (4, 0): '', (4, -1): '', (5, -1): '', (6, 0): '', (6, -1): '', (7, 0): '<?-', (7, -1): ''}, 6: {(0, 0): '<?-', (0, -1): '', (1, 0): '', (1, -1): '', (2, 0): '', (2, -1): '', (3, 0): '', (3, -1): '', (4, 0): '', (4, -1): '', (5, 0): '', (5, -1): '', (6, -1): '', (7, 0): '<?-', (7, -1): ''}, 7: {(0, 0): '', (0, -1): 'o?>', (1, 0): '<?-', (1, -1): '-?>', (2, 0): '-?>', (2, -1): '', (3, 0): '-?>', (3, -1): '', (4, 0): '-?>', (4, -1): '', (5, 0): '-?>', (5, -1): '', (6, 0): '-?>', (6, -1): '', (7, -1): 'o?>'}}

=======================================================
=======================================================
Starting preliminary phase  1

Starting test phase

p = 0

Test phase complete
p = 1
Writing:   (0,-1) -L> (0, 0) ==> (0,-1) -!> (0, 0) 
Writing:   (0, 0) -?> (1, 0) ==> (0, 0) -L> (1, 0) 
Writing:   (1, 0) <?- (0, 0) ==> (1, 0) <L- (0, 0) 
Writing:   (0, 0) <?- (2, 0) ==> (0, 0) <R- (2, 0) 
Writing:   (2, 0) -?> (0, 0) ==> (2, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (2, 0) ==> (0, 0) <!- (2, 0) 
Writing:   (2, 0) -R> (0, 0) ==> (2, 0) -!> (0, 0) 
Writing:   (0, 0) <?- (3, 0) ==> (0, 0) <R- (3, 0) 
Writing:   (3, 0) -?> (0, 0) ==> (3, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (3, 0) ==> (0, 0) <!- (3, 0) 
Writing:   (3, 0) -R> (0, 0) ==> (3, 0) -!> (0, 0) 
Writing:   (0, 0) <?- (4, 0) ==> (0, 0) <R- (4, 0) 
Writing:   (4, 0) -?> (0, 0) ==> (4, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (4, 0) ==> (0, 0) <!- (4, 0) 
Writing:   (4, 0) -R> (0, 0) ==> (4, 0) -!> (0, 0) 
Writing:   (0, 0) <?- (5, 0) ==> (0, 0) <R- (5, 0) 
Writing:   (5, 0) -?> (0, 0) ==> (5, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (5, 0) ==> (0, 0) <!- (5, 0) 
Writing:   (5, 0) -R> (0, 0) ==> (5, 0) -!> (0, 0) 
Writing:   (0, 0) <?- (6, 0) ==> (0, 0) <R- (6, 0) 
Writing:   (6, 0) -?> (0, 0) ==> (6, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (6, 0) ==> (0, 0) <!- (6, 0) 
Writing:   (6, 0) -R> (0, 0) ==> (6, 0) -!> (0, 0) 
Writing:   (2, 0) -?> (7, 0) ==> (2, 0) -L> (7, 0) 
Writing:   (7, 0) <?- (2, 0) ==> (7, 0) <L- (2, 0) 
Writing:   (3, 0) -?> (7, 0) ==> (3, 0) -L> (7, 0) 
Writing:   (7, 0) <?- (3, 0) ==> (7, 0) <L- (3, 0) 
Writing:   (4, 0) -?> (7, 0) ==> (4, 0) -L> (7, 0) 
Writing:   (7, 0) <?- (4, 0) ==> (7, 0) <L- (4, 0) 
Writing:   (5, 0) -?> (7, 0) ==> (5, 0) -L> (7, 0) 
Writing:   (7, 0) <?- (5, 0) ==> (7, 0) <L- (5, 0) 
Writing:   (6, 0) -?> (7, 0) ==> (6, 0) -L> (7, 0) 
Writing:   (7, 0) <?- (6, 0) ==> (7, 0) <L- (6, 0) 
(0,-1) independent (7, 0) given ((7, -1),) union {(2, -1), (4, 0), (3, -1), (5, -1), (2, 0), (1, -1), (6, -1), (3, 0), (1, -2), (5, 0), (6, 0), (4, -1), (0, -2)}
Writing:   (1,-1) -L> (0, 0) ==> (1,-1) -!> (0, 0) 
Writing:   (1,-1) -L> (7, 0) ==> (1,-1) -!> (7, 0) 
Writing:   (0,-1) oL> (7, 0) ==> (0,-1)     (7, 0) 

Test phase complete

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-09'], ['ER-10']]

APR:
Marked:    (1,-1) -!> (7, 0) ==> (1,-1) --> (7, 0) 
Marked:    (0,-1) -!> (0, 0) ==> (0,-1) --> (0, 0) 
Marked:    (1,-1) -!> (0, 0) ==> (1,-1) --> (0, 0) 
Writing:   (0,-1) -!> (0, 0) ==> (0,-1) --> (0, 0) 
Writing:   (1,-1) -!> (7, 0) ==> (1,-1) --> (7, 0) 
Writing:   (1,-1) -!> (0, 0) ==> (1,-1) --> (0, 0) 

APR:
Found nothing

ER-08:
Marked:    (7,-1) oL> (7, 0) ==> (7,-1) -L> (7, 0) 
Marked:    (0,-1) oL> (1, 0) ==> (0,-1) -L> (1, 0) 
Writing:   (0,-1) oL> (1, 0) ==> (0,-1) -L> (1, 0) 
Update:    Marking (0, -1) as anc of (1, 0)
Writing:   (7,-1) oL> (7, 0) ==> (7,-1) -L> (7, 0) 
Update:    Marking (7, -1) as anc of (7, 0)

APR:
Found nothing

ER-08:
Marked:    (7,-1) oL> (1, 0) ==> (7,-1) -L> (1, 0) 
Writing:   (7,-1) oL> (1, 0) ==> (7,-1) -L> (1, 0) 
Update:    Marking (7, -1) as anc of (1, 0)

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

Orientation phase complete

Middle mark updates

Writing:   (7, 0) -?> (1, 0) ==> (7, 0) -R> (1, 0) 
Writing:   (1, 0) <?- (7, 0) ==> (1, 0) <R- (7, 0) 

Starting test phase

p = 0

Test phase complete
p = 1
Writing:   (7,-1) -L> (7, 0) ==> (7,-1) -!> (7, 0) 
Writing:   (0, 0) -L> (1, 0) ==> (0, 0) -!> (1, 0) 
Writing:   (1, 0) <L- (0, 0) ==> (1, 0) <!- (0, 0) 
Writing:   (1, 0) <R- (7, 0) ==> (1, 0) <!- (7, 0) 
Writing:   (7, 0) -R> (1, 0) ==> (7, 0) -!> (1, 0) 
Writing:   (2, 0) -L> (7, 0) ==> (2, 0) -!> (7, 0) 
Writing:   (7, 0) <L- (2, 0) ==> (7, 0) <!- (2, 0) 
Writing:   (3, 0) -L> (7, 0) ==> (3, 0) -!> (7, 0) 
Writing:   (7, 0) <L- (3, 0) ==> (7, 0) <!- (3, 0) 
Writing:   (4, 0) -L> (7, 0) ==> (4, 0) -!> (7, 0) 
Writing:   (7, 0) <L- (4, 0) ==> (7, 0) <!- (4, 0) 
Writing:   (5, 0) -L> (7, 0) ==> (5, 0) -!> (7, 0) 
Writing:   (7, 0) <L- (5, 0) ==> (7, 0) <!- (5, 0) 
Writing:   (6, 0) -L> (7, 0) ==> (6, 0) -!> (7, 0) 
Writing:   (7, 0) <L- (6, 0) ==> (7, 0) <!- (6, 0) 
Writing:   (0,-1) -L> (1, 0) ==> (0,-1) -!> (1, 0) 
Writing:   (7,-1) -L> (1, 0) ==> (7,-1) -!> (1, 0) 

Test phase complete

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-00-d'], ['ER-00-c'], ['ER-03'], ['R-04'], ['ER-09'], ['ER-10'], ['ER-00-b'], ['ER-00-a']]

APR:
Marked:    (6, 0) -!> (7, 0) ==> (6, 0) --> (7, 0) 
Marked:    (3, 0) -!> (0, 0) ==> (3, 0) --> (0, 0) 
Marked:    (0,-1) -!> (1, 0) ==> (0,-1) --> (1, 0) 
Marked:    (3, 0) -!> (7, 0) ==> (3, 0) --> (7, 0) 
Marked:    (0, 0) -!> (1, 0) ==> (0, 0) --> (1, 0) 
Marked:    (7, 0) -!> (1, 0) ==> (7, 0) --> (1, 0) 
Marked:    (2, 0) -!> (7, 0) ==> (2, 0) --> (7, 0) 
Marked:    (7,-1) -!> (1, 0) ==> (7,-1) --> (1, 0) 
Marked:    (4, 0) -!> (0, 0) ==> (4, 0) --> (0, 0) 
Marked:    (5, 0) -!> (7, 0) ==> (5, 0) --> (7, 0) 
Marked:    (2, 0) -!> (0, 0) ==> (2, 0) --> (0, 0) 
Marked:    (6, 0) -!> (0, 0) ==> (6, 0) --> (0, 0) 
Marked:    (7,-1) -!> (7, 0) ==> (7,-1) --> (7, 0) 
Marked:    (5, 0) -!> (0, 0) ==> (5, 0) --> (0, 0) 
Marked:    (4, 0) -!> (7, 0) ==> (4, 0) --> (7, 0) 
Writing:   (7,-1) -!> (1, 0) ==> (7,-1) --> (1, 0) 
Writing:   (6, 0) -!> (0, 0) ==> (6, 0) --> (0, 0) 
Writing:   (0, 0) <!- (6, 0) ==> (0, 0) <-- (6, 0) 
Writing:   (0, 0) -!> (1, 0) ==> (0, 0) --> (1, 0) 
Writing:   (1, 0) <!- (0, 0) ==> (1, 0) <-- (0, 0) 
Writing:   (3, 0) -!> (0, 0) ==> (3, 0) --> (0, 0) 
Writing:   (0, 0) <!- (3, 0) ==> (0, 0) <-- (3, 0) 
Writing:   (7,-1) -!> (7, 0) ==> (7,-1) --> (7, 0) 
Writing:   (3, 0) -!> (7, 0) ==> (3, 0) --> (7, 0) 
Writing:   (7, 0) <!- (3, 0) ==> (7, 0) <-- (3, 0) 
Writing:   (4, 0) -!> (0, 0) ==> (4, 0) --> (0, 0) 
Writing:   (0, 0) <!- (4, 0) ==> (0, 0) <-- (4, 0) 
Writing:   (7, 0) -!> (1, 0) ==> (7, 0) --> (1, 0) 
Writing:   (1, 0) <!- (7, 0) ==> (1, 0) <-- (7, 0) 
Writing:   (2, 0) -!> (7, 0) ==> (2, 0) --> (7, 0) 
Writing:   (7, 0) <!- (2, 0) ==> (7, 0) <-- (2, 0) 
Writing:   (4, 0) -!> (7, 0) ==> (4, 0) --> (7, 0) 
Writing:   (7, 0) <!- (4, 0) ==> (7, 0) <-- (4, 0) 
Writing:   (5, 0) -!> (0, 0) ==> (5, 0) --> (0, 0) 
Writing:   (0, 0) <!- (5, 0) ==> (0, 0) <-- (5, 0) 
Writing:   (2, 0) -!> (0, 0) ==> (2, 0) --> (0, 0) 
Writing:   (0, 0) <!- (2, 0) ==> (0, 0) <-- (2, 0) 
Writing:   (5, 0) -!> (7, 0) ==> (5, 0) --> (7, 0) 
Writing:   (7, 0) <!- (5, 0) ==> (7, 0) <-- (5, 0) 
Writing:   (0,-1) -!> (1, 0) ==> (0,-1) --> (1, 0) 
Writing:   (6, 0) -!> (7, 0) ==> (6, 0) --> (7, 0) 
Writing:   (7, 0) <!- (6, 0) ==> (7, 0) <-- (6, 0) 

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-00-d:
Found nothing

ER-00-c:
Found nothing

ER-03:
Found nothing

R-04:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

ER-00-b:
Found nothing

ER-00-a:
Found nothing

Orientation phase complete

Middle mark updates


Preliminary phase  1 complete

Graph:
--------------------------------
(0,-1) --> (0, 0)
(1,-1) --> (0, 0)
(0, 0) --> (1, 0)
(0,-1) --> (1, 0)
(7,-1) --> (1, 0)
(0, 0) <-- (2, 0)
(0, 0) <-- (3, 0)
(0, 0) <-- (4, 0)
(0, 0) <-- (5, 0)
(0, 0) <-- (6, 0)
(1, 0) <-- (7, 0)
(2, 0) --> (7, 0)
(3, 0) --> (7, 0)
(4, 0) --> (7, 0)
(5, 0) --> (7, 0)
(6, 0) --> (7, 0)
(1,-1) --> (7, 0)
(7,-1) --> (7, 0)
--------------------------------
Writing:   (7,-1) oL> (1, 0) ==> (7,-1) -L> (1, 0) 
Update:    Marking (7, -1) as anc of (1, 0)
Writing:   (0,-1) oL> (1, 0) ==> (0,-1) -L> (1, 0) 
Update:    Marking (0, -1) as anc of (1, 0)
Writing:   (7,-1) oL> (7, 0) ==> (7,-1) -L> (7, 0) 
Update:    Marking (7, -1) as anc of (7, 0)

=======================================================
=======================================================
Starting final ancestral phase

Starting test phase

p = 0
(0,-1) independent (7, 0) given () union {(7, -1), (2, -1), (4, 0), (3, -1), (5, -1), (2, 0), (1, -1), (6, -1), (3, 0), (1, -2), (5, 0), (6, 0), (4, -1), (0, -2)}
Writing:   (0,-1) oL> (7, 0) ==> (0,-1)     (7, 0) 

Test phase complete

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-09'], ['ER-10']]

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

Orientation phase complete
p = 1
Writing:   (0,-1) -L> (0, 0) ==> (0,-1) -!> (0, 0) 
Writing:   (7,-1) -L> (7, 0) ==> (7,-1) -!> (7, 0) 
Writing:   (0, 0) -?> (1, 0) ==> (0, 0) -R> (1, 0) 
Writing:   (1, 0) <?- (0, 0) ==> (1, 0) <R- (0, 0) 
Writing:   (0, 0) -R> (1, 0) ==> (0, 0) -!> (1, 0) 
Writing:   (1, 0) <R- (0, 0) ==> (1, 0) <!- (0, 0) 
Writing:   (0, 0) <?- (2, 0) ==> (0, 0) <R- (2, 0) 
Writing:   (2, 0) -?> (0, 0) ==> (2, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (2, 0) ==> (0, 0) <!- (2, 0) 
Writing:   (2, 0) -R> (0, 0) ==> (2, 0) -!> (0, 0) 
Writing:   (0, 0) <?- (3, 0) ==> (0, 0) <R- (3, 0) 
Writing:   (3, 0) -?> (0, 0) ==> (3, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (3, 0) ==> (0, 0) <!- (3, 0) 
Writing:   (3, 0) -R> (0, 0) ==> (3, 0) -!> (0, 0) 
Writing:   (0, 0) <?- (4, 0) ==> (0, 0) <R- (4, 0) 
Writing:   (4, 0) -?> (0, 0) ==> (4, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (4, 0) ==> (0, 0) <!- (4, 0) 
Writing:   (4, 0) -R> (0, 0) ==> (4, 0) -!> (0, 0) 
Writing:   (0, 0) <?- (5, 0) ==> (0, 0) <R- (5, 0) 
Writing:   (5, 0) -?> (0, 0) ==> (5, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (5, 0) ==> (0, 0) <!- (5, 0) 
Writing:   (5, 0) -R> (0, 0) ==> (5, 0) -!> (0, 0) 
Writing:   (0, 0) <?- (6, 0) ==> (0, 0) <R- (6, 0) 
Writing:   (6, 0) -?> (0, 0) ==> (6, 0) -R> (0, 0) 
Writing:   (0, 0) <R- (6, 0) ==> (0, 0) <!- (6, 0) 
Writing:   (6, 0) -R> (0, 0) ==> (6, 0) -!> (0, 0) 
Writing:   (1, 0) <?- (7, 0) ==> (1, 0) <R- (7, 0) 
Writing:   (7, 0) -?> (1, 0) ==> (7, 0) -R> (1, 0) 
Writing:   (1, 0) <R- (7, 0) ==> (1, 0) <!- (7, 0) 
Writing:   (7, 0) -R> (1, 0) ==> (7, 0) -!> (1, 0) 
Writing:   (2, 0) -?> (7, 0) ==> (2, 0) -R> (7, 0) 
Writing:   (7, 0) <?- (2, 0) ==> (7, 0) <R- (2, 0) 
Writing:   (2, 0) -R> (7, 0) ==> (2, 0) -!> (7, 0) 
Writing:   (7, 0) <R- (2, 0) ==> (7, 0) <!- (2, 0) 
Writing:   (3, 0) -?> (7, 0) ==> (3, 0) -R> (7, 0) 
Writing:   (7, 0) <?- (3, 0) ==> (7, 0) <R- (3, 0) 
Writing:   (3, 0) -R> (7, 0) ==> (3, 0) -!> (7, 0) 
Writing:   (7, 0) <R- (3, 0) ==> (7, 0) <!- (3, 0) 
Writing:   (4, 0) -?> (7, 0) ==> (4, 0) -R> (7, 0) 
Writing:   (7, 0) <?- (4, 0) ==> (7, 0) <R- (4, 0) 
Writing:   (4, 0) -R> (7, 0) ==> (4, 0) -!> (7, 0) 
Writing:   (7, 0) <R- (4, 0) ==> (7, 0) <!- (4, 0) 
Writing:   (5, 0) -?> (7, 0) ==> (5, 0) -R> (7, 0) 
Writing:   (7, 0) <?- (5, 0) ==> (7, 0) <R- (5, 0) 
Writing:   (5, 0) -R> (7, 0) ==> (5, 0) -!> (7, 0) 
Writing:   (7, 0) <R- (5, 0) ==> (7, 0) <!- (5, 0) 
Writing:   (6, 0) -?> (7, 0) ==> (6, 0) -R> (7, 0) 
Writing:   (7, 0) <?- (6, 0) ==> (7, 0) <R- (6, 0) 
Writing:   (6, 0) -R> (7, 0) ==> (6, 0) -!> (7, 0) 
Writing:   (7, 0) <R- (6, 0) ==> (7, 0) <!- (6, 0) 
Writing:   (0,-1) -L> (1, 0) ==> (0,-1) -!> (1, 0) 
Writing:   (1,-1) -L> (0, 0) ==> (1,-1) -!> (0, 0) 
Writing:   (1,-1) -L> (7, 0) ==> (1,-1) -!> (7, 0) 
Writing:   (7,-1) -L> (1, 0) ==> (7,-1) -!> (1, 0) 

Test phase complete

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-00-d'], ['ER-00-c'], ['ER-03'], ['R-04'], ['ER-09'], ['ER-10'], ['ER-00-b'], ['ER-00-a']]

APR:
Marked:    (6, 0) -!> (7, 0) ==> (6, 0) --> (7, 0) 
Marked:    (3, 0) -!> (0, 0) ==> (3, 0) --> (0, 0) 
Marked:    (0,-1) -!> (1, 0) ==> (0,-1) --> (1, 0) 
Marked:    (3, 0) -!> (7, 0) ==> (3, 0) --> (7, 0) 
Marked:    (0, 0) -!> (1, 0) ==> (0, 0) --> (1, 0) 
Marked:    (0,-1) -!> (0, 0) ==> (0,-1) --> (0, 0) 
Marked:    (7, 0) -!> (1, 0) ==> (7, 0) --> (1, 0) 
Marked:    (2, 0) -!> (7, 0) ==> (2, 0) --> (7, 0) 
Marked:    (1,-1) -!> (7, 0) ==> (1,-1) --> (7, 0) 
Marked:    (7,-1) -!> (1, 0) ==> (7,-1) --> (1, 0) 
Marked:    (4, 0) -!> (0, 0) ==> (4, 0) --> (0, 0) 
Marked:    (1,-1) -!> (0, 0) ==> (1,-1) --> (0, 0) 
Marked:    (2, 0) -!> (0, 0) ==> (2, 0) --> (0, 0) 
Marked:    (5, 0) -!> (7, 0) ==> (5, 0) --> (7, 0) 
Marked:    (6, 0) -!> (0, 0) ==> (6, 0) --> (0, 0) 
Marked:    (7,-1) -!> (7, 0) ==> (7,-1) --> (7, 0) 
Marked:    (5, 0) -!> (0, 0) ==> (5, 0) --> (0, 0) 
Marked:    (4, 0) -!> (7, 0) ==> (4, 0) --> (7, 0) 
Writing:   (6, 0) -!> (0, 0) ==> (6, 0) --> (0, 0) 
Writing:   (0, 0) <!- (6, 0) ==> (0, 0) <-- (6, 0) 
Writing:   (0, 0) -!> (1, 0) ==> (0, 0) --> (1, 0) 
Writing:   (1, 0) <!- (0, 0) ==> (1, 0) <-- (0, 0) 
Writing:   (7,-1) -!> (7, 0) ==> (7,-1) --> (7, 0) 
Writing:   (1,-1) -!> (7, 0) ==> (1,-1) --> (7, 0) 
Writing:   (3, 0) -!> (7, 0) ==> (3, 0) --> (7, 0) 
Writing:   (7, 0) <!- (3, 0) ==> (7, 0) <-- (3, 0) 
Writing:   (7, 0) -!> (1, 0) ==> (7, 0) --> (1, 0) 
Writing:   (1, 0) <!- (7, 0) ==> (1, 0) <-- (7, 0) 
Writing:   (4, 0) -!> (7, 0) ==> (4, 0) --> (7, 0) 
Writing:   (7, 0) <!- (4, 0) ==> (7, 0) <-- (4, 0) 
Writing:   (2, 0) -!> (0, 0) ==> (2, 0) --> (0, 0) 
Writing:   (0, 0) <!- (2, 0) ==> (0, 0) <-- (2, 0) 
Writing:   (0,-1) -!> (0, 0) ==> (0,-1) --> (0, 0) 
Writing:   (5, 0) -!> (7, 0) ==> (5, 0) --> (7, 0) 
Writing:   (7, 0) <!- (5, 0) ==> (7, 0) <-- (5, 0) 
Writing:   (0,-1) -!> (1, 0) ==> (0,-1) --> (1, 0) 
Writing:   (1,-1) -!> (0, 0) ==> (1,-1) --> (0, 0) 
Writing:   (7,-1) -!> (1, 0) ==> (7,-1) --> (1, 0) 
Writing:   (3, 0) -!> (0, 0) ==> (3, 0) --> (0, 0) 
Writing:   (0, 0) <!- (3, 0) ==> (0, 0) <-- (3, 0) 
Writing:   (4, 0) -!> (0, 0) ==> (4, 0) --> (0, 0) 
Writing:   (0, 0) <!- (4, 0) ==> (0, 0) <-- (4, 0) 
Writing:   (5, 0) -!> (0, 0) ==> (5, 0) --> (0, 0) 
Writing:   (0, 0) <!- (5, 0) ==> (0, 0) <-- (5, 0) 
Writing:   (2, 0) -!> (7, 0) ==> (2, 0) --> (7, 0) 
Writing:   (7, 0) <!- (2, 0) ==> (7, 0) <-- (2, 0) 
Writing:   (6, 0) -!> (7, 0) ==> (6, 0) --> (7, 0) 
Writing:   (7, 0) <!- (6, 0) ==> (7, 0) <-- (6, 0) 

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-00-d:
Found nothing

ER-00-c:
Found nothing

ER-03:
Found nothing

R-04:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

ER-00-b:
Found nothing

ER-00-a:
Found nothing

Orientation phase complete

Middle mark updates


Final ancestral phase complete

Graph:
--------------------------------
(0,-1) --> (0, 0)
(1,-1) --> (0, 0)
(0, 0) --> (1, 0)
(0,-1) --> (1, 0)
(7,-1) --> (1, 0)
(0, 0) <-- (2, 0)
(0, 0) <-- (3, 0)
(0, 0) <-- (4, 0)
(0, 0) <-- (5, 0)
(0, 0) <-- (6, 0)
(1, 0) <-- (7, 0)
(2, 0) --> (7, 0)
(3, 0) --> (7, 0)
(4, 0) --> (7, 0)
(5, 0) --> (7, 0)
(6, 0) --> (7, 0)
(1,-1) --> (7, 0)
(7,-1) --> (7, 0)
--------------------------------

=======================================================
=======================================================
Starting non-ancestral phase

Middle mark updates


Starting test phase

p = 0

Test phase complete

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-00-d'], ['ER-00-c'], ['ER-03'], ['R-04'], ['ER-09'], ['ER-10'], ['ER-00-b'], ['ER-00-a']]

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-00-d:
Found nothing

ER-00-c:
Found nothing

ER-03:
Found nothing

R-04:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

ER-00-b:
Found nothing

ER-00-a:
Found nothing

Orientation phase complete

Non-ancestral phase complete

Graph:
--------------------------------
(0,-1) --> (0, 0)
(1,-1) --> (0, 0)
(0, 0) --> (1, 0)
(0,-1) --> (1, 0)
(7,-1) --> (1, 0)
(0, 0) <-- (2, 0)
(0, 0) <-- (3, 0)
(0, 0) <-- (4, 0)
(0, 0) <-- (5, 0)
(0, 0) <-- (6, 0)
(1, 0) <-- (7, 0)
(2, 0) --> (7, 0)
(3, 0) --> (7, 0)
(4, 0) --> (7, 0)
(5, 0) --> (7, 0)
(6, 0) --> (7, 0)
(1,-1) --> (7, 0)
(7,-1) --> (7, 0)
--------------------------------

=======================================================
=======================================================
Final rule application phase

Setting all middle marks to '-'

Starting orientation phase
with rule list:  [['APR'], ['ER-08'], ['ER-02'], ['ER-01'], ['ER-00-d'], ['ER-00-c'], ['ER-03'], ['R-04'], ['ER-09'], ['ER-10'], ['ER-00-b'], ['ER-00-a']]

APR:
Found nothing

ER-08:
Found nothing

ER-02:
Found nothing

ER-01:
Found nothing

ER-00-d:
Found nothing

ER-00-c:
Found nothing

ER-03:
Found nothing

R-04:
Found nothing

ER-09:
Found nothing

ER-10:
Found nothing

ER-00-b:
Found nothing

ER-00-a:
Found nothing

Orientation phase complete

=======================================================
=======================================================

LPCMCI has converged

Final graph:
--------------------------------
--------------------------------
(0,-1) --> (0, 0)
(1,-1) --> (0, 0)
(0, 0) --> (1, 0)
(0,-1) --> (1, 0)
(7,-1) --> (1, 0)
(0, 0) <-- (2, 0)
(0, 0) <-- (3, 0)
(0, 0) <-- (4, 0)
(0, 0) <-- (5, 0)
(0, 0) <-- (6, 0)
(1, 0) <-- (7, 0)
(2, 0) --> (7, 0)
(3, 0) --> (7, 0)
(4, 0) --> (7, 0)
(5, 0) --> (7, 0)
(6, 0) --> (7, 0)
(1,-1) --> (7, 0)
(7,-1) --> (7, 0)
--------------------------------
--------------------------------

Max search set: -1
Max na-pds set: -1

{'graph': array([[['', '-->', ''],
        ['-->', '-->', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['', '', '']],

       [['<--', '-->', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['<--', '-->', '']],

       [['-->', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['-->', '', '']],

       [['-->', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['-->', '', '']],

       [['-->', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['-->', '', '']],

       [['-->', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['-->', '', '']],

       [['-->', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['', '', ''],
        ['-->', '', '']],

       [['', '', ''],
        ['-->', '-->', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['<--', '', ''],
        ['', '-->', '']]], dtype='<U3'), 'p_matrix': array([[[0.00000000e+000, 2.50756072e-298,             inf],
        [0.00000000e+000, 1.00552791e-093,             inf],
        [5.31925708e-078,             inf,             inf],
        [0.00000000e+000,             inf,             inf],
        [0.00000000e+000,             inf,             inf],
        [5.72392466e-120,             inf,             inf],
        [2.42559541e-011,             inf,             inf],
        [            inf, 5.43311423e-002,             inf]],

       [[0.00000000e+000, 1.36673360e-115,             inf],
        [0.00000000e+000,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [0.00000000e+000, 1.20570398e-002,             inf]],

       [[5.31925708e-078,             inf,             inf],
        [            inf,             inf,             inf],
        [0.00000000e+000,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [2.32331339e-307,             inf,             inf]],

       [[0.00000000e+000,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [0.00000000e+000,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [0.00000000e+000,             inf,             inf]],

       [[0.00000000e+000,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [0.00000000e+000,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [2.82084578e-109,             inf,             inf]],

       [[5.72392466e-120,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [0.00000000e+000,             inf,             inf],
        [            inf,             inf,             inf],
        [1.80414404e-003,             inf,             inf]],

       [[2.42559541e-011,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [            inf,             inf,             inf],
        [0.00000000e+000,             inf,             inf],
        [2.28512969e-140,             inf,             inf]],

       [[            inf,             inf,             inf],
        [0.00000000e+000, 3.41390745e-036,             inf],
        [2.32331339e-307,             inf,             inf],
        [0.00000000e+000,             inf,             inf],
        [2.82084578e-109,             inf,             inf],
        [1.80414404e-003,             inf,             inf],
        [2.28512969e-140,             inf,             inf],
        [0.00000000e+000, 3.64322336e-044,             inf]]]), 'val_matrix': array([[[ 0.        ,  0.19333008,        -inf],
        [-0.19258024, -0.10825342,        -inf],
        [ 0.09523313,        -inf,        -inf],
        [ 0.20631461,        -inf,        -inf],
        [ 0.23133565,        -inf,        -inf],
        [-0.11847934,        -inf,        -inf],
        [-0.03408246,        -inf,        -inf],
        [       -inf,  0.01017286,        -inf]],

       [[-0.19258024, -0.12037485,        -inf],
        [ 0.        ,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.51729466,  0.01327128,        -inf]],

       [[ 0.09523313,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.        ,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [-0.18958643,        -inf,        -inf]],

       [[ 0.20631461,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.        ,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.26437513,        -inf,        -inf]],

       [[ 0.23133565,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.        ,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.11302008,        -inf,        -inf]],

       [[-0.11847934,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.        ,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.01593126,        -inf,        -inf]],

       [[-0.03408246,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [       -inf,        -inf,        -inf],
        [ 0.        ,        -inf,        -inf],
        [ 0.12823589,        -inf,        -inf]],

       [[       -inf,        -inf,        -inf],
        [ 0.51729466,  0.06633833,        -inf],
        [-0.18958643,        -inf,        -inf],
        [ 0.26437513,        -inf,        -inf],
        [ 0.11302008,        -inf,        -inf],
        [ 0.01593126,        -inf,        -inf],
        [ 0.12823589,        -inf,        -inf],
        [ 0.        ,  0.07359695,        -inf]]])}
